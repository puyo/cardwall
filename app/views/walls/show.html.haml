= form_for @wall do |form|
  %section.dashboard
    .save_button
      = form.submit 'Save (Ctrl-S)', disabled: true
    .flash
      .notice
        - if flash.notice
          %p= notice
      .alert
        - if flash.alert
          %p= alert

    .credits
      %p
        #{link_to 'gregory mcintyre', 'http://gregorymcintyre.com'} with <tt>&lt;3</tt>
      %p
        please #{link_to 'report', 'https://github.com/puyo/cardwall/issues/new'} any problems

    .prototypes
      = render partial: 'prototype', collection: @wall.prototypes, as: :prototype, locals: { form: form, wall: @wall }

  %section.wall#wall
    = render partial: 'card', collection: @wall.cards, as: :card, locals: { form: form }

- content_for :javascript do
  :javascript
    $(function(){
      var dragging = false;

      function bringToTop(elem, others){
        // stolen from jquery.ui.draggable's stack functionality
        var group = $.makeArray(others).sort(function(a,b){
          return (parseInt($(a).css("zIndex"),10) || 0) - (parseInt($(b).css("zIndex"),10) || 0);
        });
        if (!group.length) { return; }
        var min = parseInt(group[0].style.zIndex) || 0;
        $(group).each(function(i){ this.style.zIndex = min + i; });
        elem[0].style.zIndex = min + group.length;
      }

      function setEditPosition(editable){
        editable.find('.edit_card_form').css('left', editable.find('.content').width() + 5);
      }

      $('.editable').click(function() {
        if (dragging === false) {
          var editable = $(this).closest('.editable');
          var selected = editable.hasClass('selected');
          bringToTop(editable, $('.editable'));
          $('.editable').removeClass('selected');
          if (!selected) {
            editable.addClass('selected');
            editable.find('input:visible, textarea:visible').first().focus();
            setEditPosition(editable);
          }
        } else {
          dragging = false;
        }
      });

      $('.editable').change(function(){
        $(this).addClass('changed');
        $('#wall_submit').addClass('changed').attr('disabled', false);
      });

      $('.card').draggable({
        containment: "#wall",
        disabled: false,
        stack: '.card',
        start: function() { dragging = true; },
        stop: function(event, ui) {
          var pos = $(this).position();
          $(this).find('.x_input').val(pos.left);
          $(this).find('.y_input').val(pos.top);
          $('.card').each(function(){
            $(this).find('.z_input').val($(this).css('z-index'));
          });
          $(this).trigger('change');
        }
      });

      $('.text_input').bind('keydown keyup keypress', function(){
        var editable = $(this).closest('.editable');
        var text = editable.find('.content .text');
        if ($(this).val() !== text.text()) {
          $(this).trigger('change');
        }
        editable.find('.content .text').text($(this).val());
      });

      $('.w_input').change(function(){
        var editable = $(this).closest('.editable');
        editable.find('.content').css('width', $(this).val());
        setEditPosition(editable);
      });
      $('.h_input').change(function(){ $(this).closest('editable').find('.content').css('min-height', $(this).val() + 'px'); });

      $('.shadow_input').change(function(){
        var content = $(this).closest('.editable').find('.content');
        if ($(this).attr('checked')) {
          content.addClass('shadow');
        } else {
          content.removeClass('shadow');
        }
      });

      $('.bg_color_input').bind('keydown keyup keypress', function(){
        $(this).closest('.editable').find('.content').css('background-color', $(this).val());
        $(this).trigger('change');
      });

      $('.prototype').sortable({
        disabled: false,
        stop: function(event, ui) {
          var form = ui.find('form');
          form.find()
          //console.log(event, ui);
        }
      });

      $(document).keyup(function(event){
        if (event.keyCode === 27) {
          $('.selected').removeClass('selected');
        }
      });

      $(document).keypress(function(event){
        if (event.charCode === 19 && event.ctrlKey && $('#wall_submit').hasClass('changed')) {
          $('##{dom_id(@wall, 'edit')}').submit();
        }
      });

      $('.flash').find('.notice, .alert').find('p').delay(5000).fadeOut('slow');
    });
